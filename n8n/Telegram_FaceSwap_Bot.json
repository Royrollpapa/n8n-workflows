{
  "name": "Telegram FaceSwap Bot",
  "nodes": [
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {
          "download": false
        }
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.2,
      "position": [
        0,
        0
      ],
      "id": "313f0324-7c7a-439e-80fb-4837081269c0",
      "name": "Telegram Trigger",
      "webhookId": "cc717824-1a1a-418c-997a-4a0274184a60",
      "credentials": {
        "telegramApi": {
          "id": "eYjmXFqZmy29zSvG",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// 检查消息是否包含照片\nif (items[0].json.message.photo) {\n  return items;\n} else {\n  return [];\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        220,
        0
      ],
      "id": "eea753ce-e204-4594-b0b5-a333791ec13c",
      "name": "Code"
    },
    {
      "parameters": {
        "url": "=https://api.telegram.org/bot{{$node[\"Telegram Trigger\"].json[\"credentials\"][\"telegramApi\"][\"botToken\"]}}/getFile",
        "authentication": "genericCredentialType",
        "options": {},
        "queryParameters": {
          "parameters": [
            {
              "name": "file_id",
              "value": "={{$node[\"Telegram Trigger\"].json[\"message\"][\"photo\"][0][\"file_id\"]}}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        440,
        0
      ],
      "id": "afece647-8558-4b33-a8ed-a959d5df1ac6",
      "name": "Get File"
    },
    {
      "parameters": {
        "url": "=https://api.telegram.org/file/bot{{$node[\"Telegram Trigger\"].json[\"credentials\"][\"telegramApi\"][\"botToken\"]}}/{{$node[\"Get File\"].json[\"result\"][\"file_path\"]}}",
        "authentication": "genericCredentialType",
        "options": {
          "response": {
            "format": "base64"
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        660,
        0
      ],
      "id": "b5e8f9a2-c3d1-4e6f-8b7a-9c0d1e2f3a4b",
      "name": "Download Image"
    },
    {
      "parameters": {
        "jsCode": "// 定义 Segmind API 调用函数\nasync function callSegmindAPI(imageBase64) {\n  const apiKey = $node[\"Segmind Credentials\"].json[\"apiKey\"];\n  const url = \"https://api.segmind.com/v1/faceswap-v4\";\n  \n  const payload = {\n    source_image: imageBase64,\n    target_image: imageBase64,\n    model_type: \"speed\",\n    swap_type: \"head\",\n    style_type: \"normal\",\n    seed: 4208875,\n    image_format: \"png\",\n    image_quality: 90,\n    base64: true\n  };\n\n  try {\n    const response = await $http.post({\n      url: url,\n      headers: {\n        \"x-api-key\": apiKey,\n        \"Content-Type\": \"application/json\"\n      },\n      body: payload\n    });\n\n    return response;\n  } catch (error) {\n    throw new Error(`Segmind API 调用失败: ${error.message}`);\n  }\n}\n\n// 主函数\nasync function main() {\n  try {\n    // 获取图片数据\n    const imageData = items[0].json.data;\n    \n    // 调用 Segmind API\n    const result = await callSegmindAPI(imageData);\n    \n    // 返回处理结果\n    return {\n      json: {\n        processedImage: result.data,\n        success: true,\n        message: \"图片处理成功\"\n      }\n    };\n  } catch (error) {\n    // 错误处理\n    return {\n      json: {\n        success: false,\n        error: error.message\n      }\n    };\n  }\n}\n\n// 执行主函数\nreturn main();"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        880,
        0
      ],
      "id": "c6d7e8f9-a0b1-2c3d-4e5f-6g7h8i9j0k1l",
      "name": "Segmind Function"
    },
    {
      "parameters": {
        "resource": "message",
        "operation": "send",
        "chatId": "={{$node[\"Telegram Trigger\"].json[\"message\"][\"chat\"][\"id\"]}}",
        "photo": "={{$node[\"Segmind Function\"].json[\"processedImage\"]}}",
        "caption": "={{$node[\"Segmind Function\"].json[\"success\"] ? \"图片处理完成！\" : \"处理失败：\" + $node[\"Segmind Function\"].json[\"error\"]}}"
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1,
      "position": [
        1100,
        0
      ],
      "id": "d7e8f9a0-b1c2-3d4e-5f6g-7h8i9j0k1l2m",
      "name": "Send Telegram Message",
      "credentials": {
        "telegramApi": {
          "id": "eYjmXFqZmy29zSvG",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "apiKey": "={{$env.SEGMIND_API_KEY}}"
      },
      "type": "n8n-nodes-base.segmind",
      "typeVersion": 1,
      "position": [
        880,
        -200
      ],
      "id": "e8f9a0b1-c2d3-4e5f-6g7h-8i9j0k1l2m3n",
      "name": "Segmind Credentials"
    }
  ],
  "pinData": {},
  "connections": {
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Get File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get File": {
      "main": [
        [
          {
            "node": "Download Image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download Image": {
      "main": [
        [
          {
            "node": "Segmind Function",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Segmind Function": {
      "main": [
        [
          {
            "node": "Send Telegram Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "8c299ed5-316d-4329-bf59-53f8903bb69d",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "6cfc3fa59a8c03a5ad4dbe6ffe6be5cdd900184c37e96642a5402a86c822151f"
  },
  "id": "onUEzPHgKeK2j8B1",
  "tags": []
} 